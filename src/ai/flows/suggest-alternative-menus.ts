// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to suggest alternative menu options, maintaining nutritional value and meeting dietary restrictions.
 *
 * - suggestAlternativeMenus - A function that suggests alternative menus.
 * - SuggestAlternativeMenusInput - The input type for the suggestAlternativeMenus function.
 * - SuggestAlternativeMenusOutput - The return type for the suggestAlternativeMenus function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestAlternativeMenusInputSchema = z.object({
  plannedMenu: z.array(z.string()).describe('The planned menu for the next two days.'),
  possibleMenu: z.array(z.string()).describe('The possible menu (alternative options) for the next two days.'),
  availableItems: z.array(z.string()).describe('The food items available at the school.'),
  dietaryRestrictions: z.array(z.string()).describe('The dietary restrictions of the students (e.g., vegetarian, gluten-free, allergies).'),
});

export type SuggestAlternativeMenusInput = z.infer<typeof SuggestAlternativeMenusInputSchema>;

const SuggestAlternativeMenusOutputSchema = z.object({
  suggestions: z.array(z.string()).describe('Suggested alternative menu options that maintain nutritional value and meet dietary restrictions.'),
});

export type SuggestAlternativeMenusOutput = z.infer<typeof SuggestAlternativeMenusOutputSchema>;

export async function suggestAlternativeMenus(input: SuggestAlternativeMenusInput): Promise<SuggestAlternativeMenusOutput> {
  return suggestAlternativeMenusFlow(input);
}

const suggestAlternativeMenusPrompt = ai.definePrompt({
  name: 'suggestAlternativeMenusPrompt',
  input: {schema: SuggestAlternativeMenusInputSchema},
  output: {schema: SuggestAlternativeMenusOutputSchema},
  prompt: `You are a nutritionist helping a school administrator create alternative menu options.

  Consider the following:
  * The planned menu for the next two days: {{{plannedMenu}}}
  * The possible menu options: {{{possibleMenu}}}
  * Available food items: {{{availableItems}}}
  * Dietary restrictions: {{{dietaryRestrictions}}}

  Suggest alternative menu options that maintain nutritional value and meet the dietary restrictions of the students.
  Return the suggestions as a list of strings.
  `,
});

const suggestAlternativeMenusFlow = ai.defineFlow(
  {
    name: 'suggestAlternativeMenusFlow',
    inputSchema: SuggestAlternativeMenusInputSchema,
    outputSchema: SuggestAlternativeMenusOutputSchema,
  },
  async input => {
    const {output} = await suggestAlternativeMenusPrompt(input);
    return output!;
  }
);
